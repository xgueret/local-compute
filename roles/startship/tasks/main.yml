- name: Get username on the host
  ansible.builtin.command: whoami
  register: username_on_the_host

- name: Set fact local_user on the host if not defined
  ansible.builtin.set_fact:
    local_user: "{{ username_on_the_host.stdout }}"
  when: local_user is not defined

- name: Check if Starship is already installed
  ansible.builtin.command: starship --version
  register: starship_installed
  ignore_errors: true

- name: Download Starship install script
  ansible.builtin.get_url:
    url: https://starship.rs/install.sh
    dest: /tmp/starship_install.sh
    mode: '0755'
  when: starship_installed.failed

- name: Install Starship
  ansible.builtin.shell:
    cmd: /tmp/starship_install.sh --yes
    executable: /bin/sh
  when: starship_installed.failed

- name: Clean up Starship install script
  ansible.builtin.file:
    path: /tmp/starship_install.sh
    state: absent
  when: starship_installed.failed

- name: Ensure Starship init line is in .bashrc
  ansible.builtin.lineinfile:
    path: /home/{{ local_user }}/.bashrc
    line: 'eval "$(starship init bash)"'
    create: true
    state: present
  become_user: "{{ local_user }}"

- name: Reload .bashrc to apply changes
  ansible.builtin.shell: source /home/{{ local_user }}/.bashrc
  become_user: "{{ local_user }}"
  when: starship_installed.failed
  notify: Apply the changes to .bashrc
